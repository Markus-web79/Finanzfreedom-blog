name: Blog Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  blog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci || npm install

      # 🧩 Content-Korrektur (fixContent.js)
      - name: Check & Fix Content
        run: |
          echo "🔍 Starte Rechtschreibprüfung & Auto-Fix..."
          node scripts/fixContent.js || echo "Keine Änderungen gefunden"

          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git pull origin main || true
          git add content || echo "Nichts zu committen"
          git commit -m "🔍 Auto-Check: Content korrigiert" || echo "Keine Änderungen gefunden"
          git push || echo "Kein Push notwendig"

      # 🛠️ Projekt builden
      - name: Build project
        run: |
          echo "🏗️ Baue Projekt..."
          npm run build

      # 🗺️ Sitemap generieren (nach dem Build, vor dem Deploy)
      - name: Generate Sitemap
        run: |
          echo "🗺️ Generiere Sitemap..."
          mkdir -p public
          node generate-sitemap.js
          echo "📦 Inhalt von /public:"
          ls -la public

      # 🚀 Deploy zu Vercel (Production)
      - name: Deploy to Vercel (prod)
        run: |
          echo "🚀 Starte Deployment zu Vercel..."
          npx vercel --prod --yes -A vercel.json \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --scope=${{ secrets.VERCEL_SCOPE }} > deployment.txt
          echo "url=$(grep -o 'https://[^ ]*vercel.app' deployment.txt | tail -n1)" >> $GITHUB_ENV

      - name: Show Deployment URL
        run: echo "🚀 Live: ${{ env.url }}"
